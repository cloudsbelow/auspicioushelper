# hiiii -kyfex
mods.auspicioushelper.name=Auspicious Helper

# .channel = The channel to listen to

### Triggers

# Channel Player Trigger
triggers.auspicioushelper/ChannelPlayerTrigger.placements.name.main=Channel Player Trigger
triggers.auspicioushelper/ChannelPlayerTrigger.placements.description.main=Modifies a given channel when a player interacts with this trigger
triggers.auspicioushelper/ChannelPlayerTrigger.attributes.description.channel=The channel to modify
triggers.auspicioushelper/ChannelPlayerTrigger.attributes.description.value=The value to use when modifying the channel
triggers.auspicioushelper/ChannelPlayerTrigger.attributes.description.op=The operation to use when modifying the channel
triggers.auspicioushelper/ChannelPlayerTrigger.attributes.description.action=What player action will trigger this
triggers.auspicioushelper/ChannelPlayerTrigger.attributes.description.only_once=If this should only trigger once

# Conditional Strawberry Collect Trigger
triggers.auspicioushelper/ConditionalStrawbCollectTrigger.placements.name.main=Conditional Strawberry Collection Trigger
triggers.auspicioushelper/ConditionalStrawbCollectTrigger.placements.description.main=Forces the collection of a specific strawberry
triggers.auspicioushelper/ConditionalStrawbCollectTrigger.attributes.name.strawberry_id=Conditional Strawberry ID
triggers.auspicioushelper/ConditionalStrawbCollectTrigger.attributes.description.strawberry_id=The strawberry to collect

# Release Holdable Trigger
triggers.auspicioushelper/HoldableReleaseTrigger.placements.name.main=Release Holdable Trigger
triggers.auspicioushelper/HoldableReleaseTrigger.placements.description.main=Set holdable timer to 0, allowing immediate release
triggers.auspicioushelper/HoldableReleaseTrigger.attributes.description.force_throw=Whether the player should throw the item or just drop it
triggers.auspicioushelper/HoldableReleaseTrigger.attributes.description.only_once=If this should only trigger once

### Misc Entities

# Anti 0f Zone
entities.auspicioushelper/Anti0fZone.placements.name.main=Anti 0f Zone
entities.auspicioushelper/Anti0fZone.placements.description.main=Prevents certain zero-frameable inputs from happening while inside this entity
entities.auspicioushelper/Anti0fZone.attributes.name.always_walljumpcheck=Check Unsolid Walljumps
entities.auspicioushelper/Anti0fZone.attributes.description.solids=Perform walljumps/cornerjumps on first possible pixel (prevents missing cornerboost speed from 0f)
entities.auspicioushelper/Anti0fZone.attributes.description.holdables=Pick up holdables on the first possible pixel
entities.auspicioushelper/Anti0fZone.attributes.description.player_colliders=Hit player colliders on the first possible pixel (if speed or number of dashes changes, will stop your movement)
entities.auspicioushelper/Anti0fZone.attributes.description.always_walljumpcheck=Check for walljumps off of non-solids each pixel (needed if using sideways jumpthrus) (slow; only use in the area directly around the jumpthru)
entities.auspicioushelper/Anti0fZone.attributes.description.triggers=Hit triggers on the first possible pixel
entities.auspicioushelper/Anti0fZone.attributes.description.cover_whole_room=Makes this entity cover the whole room

# Beam Blocker
entities.auspicioushelper/BeamBlocker.placements.name.main=Beam Blocker
entities.auspicioushelper/BeamBlocker.placements.description.main=Stops  Spiral Boss Beam from going through this entity, similar to a wall

# Cassette Gate
entities.auspicioushelper/CassetteGate.placements.name.main=[WIP] Cassette Gate
entities.auspicioushelper/CassetteGate.placements.description.main=A Heart Gate but unlocked with a cassette instead
entities.auspicioushelper/CassetteGate.attributes.description.horizontal=Whether this gate is horizontal or not

# Die Water
entities.auspicioushelper/DieWater.placements.name.main=Die Water
entities.auspicioushelper/DieWater.placements.description.main=Water that uhm. uh. kills you

# Lava Sandwich Aligner
entities.auspicioushelper/lavasandwichAligner.placements.name.main=[WIP] Lava Sandwich Aligner
entities.auspicioushelper/lavasandwichAligner.placements.description.main=Aligns the lava sandwich to center on this entity instead of the center of the screen
entities.auspicioushelper/lavasandwichAligner.attributes.name.y=Y (hover for info)
entities.auspicioushelper/lavasandwichAligner.attributes.description.y=Y position of the entity, and the Y position to center the sandwich on

# Material Controller
entities.auspicioushelper/MaterialController.placements.name.main=Material Controller
entities.auspicioushelper/MaterialController.placements.description.main=Adds a shader pass to the level, reccomended to look at wiki
entities.auspicioushelper/MaterialController.attributes.description.path=Path to shader
entities.auspicioushelper/MaterialController.attributes.description.params=Paramaters to pass to the shader
entities.auspicioushelper/MaterialController.attributes.description.identifier=Shorthand for shader (only share identifiers if path and params are identical)
entities.auspicioushelper/MaterialController.attributes.description.depth=The level at which the layer is added to the scene
entities.auspicioushelper/MaterialController.attributes.description.Fade_in=How to fade in during transitions
entities.auspicioushelper/MaterialController.attributes.description.fadeOut=How to fade out during transitions
entities.auspicioushelper/MaterialController.attributes.description.independent=If this doesn't need the <depth as a texture (check when possible for performance) (gp texture set to slot 3 when unchecked)
entities.auspicioushelper/MaterialController.attributes.description.simple=Whether this is simple (used in WIP system, always check)
entities.auspicioushelper/MaterialController.attributes.description.always=Whether to always perform (used in WIP system, always check)
entities.auspicioushelper/MaterialController.attributes.description.useprev=Whether to pass the previous output of this layer to the texture (on slot 4)
entities.auspicioushelper/MaterialController.attributes.description.usebg=Whether to render BG styleground layers and pass them
entities.auspicioushelper/MaterialController.attributes.description.reload=Reload the effect whenever this entity is added (use for debugging)

# Portal Gate H
entities.auspicioushelper/PortalGateH.placements.name.main=Portal Gate (Horizontal)
entities.auspicioushelper/PortalGateH.placements.description.main=A portal that slices entities that are halfway though it
entities.auspicioushelper/PortalGateH.attributes.description.attached=If the portals are attached to solids
entities.auspicioushelper/PortalGateH.attributes.description.color_hex=The portal color
entities.auspicioushelper/PortalGateH.attributes.name.right_facing_f0=Portal 1 Facing Right
entities.auspicioushelper/PortalGateH.attributes.name.right_facing_f1=Portal 2 Facing Right
entities.auspicioushelper/PortalGateH.attributes.description.right_facing_f0=If the first portal should face right
entities.auspicioushelper/PortalGateH.attributes.description.right_facing_f1=If the second portal should face right
entities.auspicioushelper/PortalGateH.attributes.name.giveRCB=Gives Reverse Corner Boost
entities.auspicioushelper/PortalGateH.attributes.description.giveRCB=Whether the portal should give reverse corner boost on exiting portal

# Spiral Boss Beam
entities.auspicioushelper/SpiralBossBeam.placements.name.main=Spiral Boss Beam
entities.auspicioushelper/SpiralBossBeam.placements.description.main=A Boss Beam that rotates
entities.auspicioushelper/SpiralBossBeam.attributes.description.start_angle=The starting angle in radians
entities.auspicioushelper/SpiralBossBeam.attributes.description.speed=The rotation speed in radians/sec

# Tracked Cassette
entities.auspicioushelper/TrackedCassette.placements.name.main=Tracked Cassette
entities.auspicioushelper/TrackedCassette.placements.description.main=A customizable cassette
entities.auspicioushelper/TrackedCassette.attributes.name.dont_unlock_bside=Don't Unlock B-Side
entities.auspicioushelper/TrackedCassette.attributes.description.dont_unlock_bside=Whether to unlock the B-Side on collect
entities.auspicioushelper/TrackedCassette.attributes.description.use_raw_message=Whether to use the raw text in "message" or try and translate it
entities.auspicioushelper/TrackedCassette.attributes.description.message=The message to display on collect
entities.auspicioushelper/TrackedCassette.attributes.description.line_width=How wide the cassette collect message should be
entities.auspicioushelper/TrackedCassette.attributes.description.flag=The flag to set on collect
entities.auspicioushelper/TrackedCassette.attributes.description.identifier=A unique identifier for this cassette

# Vertical Fling Bird
entities.auspicioushelper/VerticalFlingBird.placements.name.main=Vertical Fling Bird 
entities.auspicioushelper/VerticalFlingBird.placements.description.main=A bird that flies up off the screen after it flings you

# Entity ID Marker
entities.auspicioushelper/EntityMarkingFlag.placements.name.main=Entity Marker
entities.auspicioushelper/EntityMarkingFlag.placements.description.main=Finds an entity by ID and assigns it a string id. Add to a zztemplates room.
entities.auspicioushelper/EntityMarkingFlag.attributes.description.path=The entity ID
entities.auspicioushelper/EntityMarkingFlag.attributes.description.identifier=The unique identifier to give the entity, when found

# Spline
entities.auspicioushelper/Spline.placements.name.main=[WIP] Spline
entities.auspicioushelper/Spline.placements.description.main=WIP

### Channel Stuff

# Channel Block
entities.auspicioushelper/ChannelBlock.placements.name.main=Channel Block 
entities.auspicioushelper/ChannelBlock.placements.description.main=A block that is only solid if its given channel is active/odd. (the modder uses this in their maps and didn't really make it with the intent for others to. It is reccomended to use template cassette blocks since they have all the same functionality and actually have visuals)
entities.auspicioushelper/ChannelBlock.attributes.description.channel=The channel to listen to
entities.auspicioushelper/ChannelBlock.attributes.description.inverted=If the block should only be solid when the channel is not active/even
entities.auspicioushelper/ChannelBlock.attributes.description.safe=If the block should be "safe" (you can collect strawberries when standing on it

# Channel Booster
entities.auspicioushelper/ChannelBooster.placements.name.main=Channel Booster
entities.auspicioushelper/ChannelBooster.placements.description.main=A booster that can only be entered depending on its given channel
entities.auspicioushelper/ChannelBooster.attributes.description.channel=The channel to listen to
entities.auspicioushelper/ChannelBooster.attributes.description.self_activating=Should the given channel toggle when the player exits the booster
entities.auspicioushelper/ChannelBooster.attributes.name.state0=Inactive State
entities.auspicioushelper/ChannelBooster.attributes.description.state0=How the booster should behave when inactive/even
entities.auspicioushelper/ChannelBooster.attributes.name.state1=Active State
entities.auspicioushelper/ChannelBooster.attributes.description.state1=How the booster should behave when active/odd

#channel clear Controller
entities.auspicioushelper/ChannelClearController.placements.description.main=Entity that manages channel resetting when constructed in a room
entities.auspicioushelper/ChannelClearController.attributes.description.channel=Sets this singular channel to the specified value
entities.auspicioushelper/ChannelClearController.attributes.description.value=Set the channel to this value
entities.auspicioushelper/ChannelClearController.attributes.description.clear_prefix=Set all channel values with this prefix to 0
entities.auspicioushelper/ChannelClearController.attributes.description.clear_all=Completely reset all channel values to 0

#channelhotcoldwatcher
entities.auspicioushelper/ChannelHotColdWatcher.placements.description.main=Set a channel based on the core mode
entities.auspicioushelper/ChannelHotColdWatcher.attributes.description.channel=The channel to set
entities.auspicioushelper/ChannelHotColdWatcher.attributes.description.Hot_value=the value to set in hot mode
entities.auspicioushelper/ChannelHotColdWatcher.attributes.description.Cold_value=the value to set in chilly mode

#channeljelly
entities.auspicioushelper/ChannelJelly.placements.description.main=A jellyfish that changes state based on channel
entities.auspicioushelper/ChannelJelly.attributes.description.channel=The channel to watch
entities.auspicioushelper/ChannelJelly.attributes.description.state0=The state to use when the channel is even
entities.auspicioushelper/ChannelJelly.attributes.description.state1=The state to use when the channel is odd

#channelmath
entities.auspicioushelper/ChannelMathController.placements.description.main=Run compiled expressions on channels, flags and entity states. Reccomended to read the wiki, read the compiler, get a PHD, and hit the modder
entities.auspicioushelper/ChannelMathController.attributes.description.compiled_operations=Encoded compiled operations, gotten from the compiler website
entities.auspicioushelper/ChannelMathController.attributes.description.run_immediately=Run immediately when a watched channel changes. This can very easily cause infinite loops and is not reccomended unless you know what you are doing.
entities.auspicioushelper/ChannelMathController.attributes.description.custom_polling_rate=If defined, will run the code every X frames. If not defined, will run whenever a channel that is being used in an expression updates.
entities.auspicioushelper/ChannelMathController.attributes.description.debug=Whether to print debug information to the auspicioushelper debug console (windows only)

#channelsw
entities.auspicioushelper/ChannelSwitch.placements.description.main=Core switch that actually toggles channels
entities.auspicioushelper/ChannelSwitch.attributes.description.channel=Channel to set
entities.auspicioushelper/ChannelSwitch.attributes.description.on_only=Only triggerable in the on state
entities.auspicioushelper/ChannelSwitch.attributes.description.off_only=Only triggerable in the off state
entities.auspicioushelper/ChannelSwitch.attributes.description.player_toggle=Whether the player can hit
entities.auspicioushelper/ChannelSwitch.attributes.description.throwable_toggle=Whether throwables can hit
entities.auspicioushelper/ChannelSwitch.attributes.description.seeker_toggle=Whether seekers can hit
entities.auspicioushelper/ChannelSwitch.attributes.description.on_value=Value to set when on
entities.auspicioushelper/ChannelSwitch.attributes.description.off_value=Value to set when off
entities.auspicioushelper/ChannelSwitch.attributes.description.cooldown=Cooldown for hitting this particular switch (the channel itself is not constrained)

#channelmvoer
entities.auspicioushelper/ChannelMover.placements.description.main=A block that moves between nodes based on channel. (the modder uses this in their maps and didn't really make it with the intent for others to. It is reccomended to use template channel blocks since they have all the same functionality and actually have visuals)

#channelplayerwatcher
entities.auspicioushelper/ChannelPlayerWatcher.placements.description.main=It is reccomended to use a channel player trigger instead. This is much the same but covers whole room.

#channelreskinnedspinner
entities.auspicioushelper/ChannelReskinnedSpinner.placements.description.main=This is an entity for emptynoise(tollab) and is not supported in other contexts (I didn't even end up using it since white spinners so beautifl)

#channelsprite
entities.auspicioushelper/ChannelSprite.placements.description.main=Sprite that can display animations defined in Sprites.xml based on a channel. Check auspicioushelper's Sprites.xml for an example setup.
entities.auspicioushelper/ChannelSprite.attributes.description.channel=the channel to watch
entities.auspicioushelper/ChannelSprite.attributes.description.attached=Whether to attach the entity to solids
entities.auspicioushelper/ChannelSprite.attributes.description.edge_type=How to pick the case when the channel is less than zero or greater than cases-1
entities.auspicioushelper/ChannelSprite.attributes.description.xml_spritename=name of the XML sprite
entities.auspicioushelper/ChannelSprite.attributes.description.cases=number of cases defined in XML
entities.auspicioushelper/ChannelSprite.attributes.description.offsetX=shift sprite's X direction from placement(why didn't I use nodes?)
entities.auspicioushelper/ChannelSprite.attributes.description.offsetY=shift sprite's Y direction from placement(why didn't I use nodes?)
entities.auspicioushelper/ChannelSprite.attributes.description.depth=it's what you would expect from this field

#channeltheo
entities.auspicioushelper/ChannelTheo.placements.description.main=I got peer pressured into making this on my third day of modding (it was fun though). Jank.
entities.auspicioushelper/ChannelTheo.attributes.description.channel=When nonzero, used the cursed behavior
entities.auspicioushelper/ChannelTheo.attributes.description.switch_thrown_momentum=Player and holdable switch momentum when throwing
entities.auspicioushelper/ChannelTheo.attributes.description.swap_thrown_positions=Switch positions with holdable dangerously when throwing(may clip player)
entities.auspicioushelper/ChannelTheo.attributes.description.swap_thrown_positions_nodie=Don't clip player into wall when switching positions
entities.auspicioushelper/ChannelTheo.attributes.description.player_momentum_weight=Check template holdable for explanation don't wana write
entities.auspicioushelper/ChannelTheo.attributes.description.theo_momentum_weight=check playermomentum

#channelvfxspritechain
entities.auspicioushelper/SpriteAnimChain.placements.description.main=This is an entity for emptynoise(tollab) and is not supported in other contexts

#conditionalstrawb
entities.auspicioushelper/ConditionalStrawb.placements.description.main=Conditional strawberry that does not increase map strawberry count. Winged strawberry flies to the node when specified. Must be collected in conditional strawb collect trigger
entities.auspicioushelper/ConditionalStrawb.attributes.description.strawberry_id=Name of the strawberry to use in collect triggers
entities.auspicioushelper/ConditionalStrawb.attributes.description.appear_on_ch=Only appear when the specified channel is the specified value
entities.auspicioushelper/ConditionalStrawb.attributes.description.appear_roomenter_only=Only check the appearance channel when entering the room (i'm not sure unchecking this works; never tested)
entities.auspicioushelper/ConditionalStrawb.attributes.description.appear_channel=Channel to check whether strawberry should appear
entities.auspicioushelper/ConditionalStrawb.attributes.description.appear_chvalue=Only appear if the appear channel has this value
entities.auspicioushelper/ConditionalStrawb.attributes.description.fly_on_ch=Whether strawberry should fly away when the given channel has the specified value
entities.auspicioushelper/ConditionalStrawb.attributes.description.fly_channel=Channel to watch for flying away
entities.auspicioushelper/ConditionalStrawb.attributes.description.fly_value=Fly away if fly channel has this value
entities.auspicioushelper/ConditionalStrawb.attributes.description.deathless=Act like a golden, returning to this strawberry's initial room when you die with it
entities.auspicioushelper/ConditionalStrawb.attributes.description.winged=Fly to node (or off the screen if no node) when you dash
entities.auspicioushelper/ConditionalStrawb.attributes.description.wingedfollower=Can fly away when the strawberry is following you
entities.auspicioushelper/ConditionalStrawb.attributes.description.persist_on_death=The strawberry will stick around even if you die
entities.auspicioushelper/ConditionalStrawb.attributes.description.sprites=The sprites to use for this. Currently not working, will fix later.

#conditionalstrawbtracked
entities.auspicioushelper/ConditionalStrawbTracked.placements.description.main=Conditional strawberry that adds to the map's strawberry count. Winged strawberry flies to the node when specified. Must be collected in conditional strawb collect trigger
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.strawberry_id=Name of the strawberry to use in collect triggers
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.appear_on_ch=Only appear when the specified channel is the specified value
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.appear_roomenter_only=Only check the appearance channel when entering the room (i'm not sure unchecking this works; never tested)
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.appear_channel=Channel to check whether strawberry should appear
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.appear_chvalue=Only appear if the appear channel has this value
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.fly_on_ch=Whether strawberry should fly away when the given channel has the specified value
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.fly_channel=Channel to watch for flying away
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.fly_value=Fly away if fly channel has this value
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.deathless=Act like a golden, returning to this strawberry's initial room when you die with it
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.winged=Fly to node (or off the screen if no node) when you dash
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.wingedfollower=Can fly away when the strawberry is following you
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.persist_on_death=The strawberry will stick around even if you die
entities.auspicioushelper/ConditionalStrawbTracked.attributes.description.sprites=The sprites to use for this. Currently not working, will fix later.

### Templates Stuff

# Template Block
entities.auspicioushelper/TemplateBlock.placements.name.main=Template Breakable Block
entities.auspicioushelper/TemplateBlock.placements.description.main=A static block that can be made with a template
entities.auspicioushelper/TemplateBlock.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateBlock.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateBlock.attributes.description.visible=Whether the template is visible or not
entities.auspicioushelper/TemplateBlock.attributes.description.collidable=Whether the template is collidable or not
entities.auspicioushelper/TemplateBlock.attributes.description.active=Whether the template will update or not
entities.auspicioushelper/TemplateBlock.attributes.description.only_redbubble_or_summit_launch=If the template can only be broken when in a red bubble or summit launching
entities.auspicioushelper/TemplateBlock.attributes.description.persistent=If the template will respawn after being broken
entities.auspicioushelper/TemplateBlock.attributes.description.canbreak=Whether or not you can dash into this template to break it
entities.auspicioushelper/TemplateBlock.attributes.description.breaksfx=The sound effect to play when this template is broken
entities.auspicioushelper/TemplateBlock.attributes.description.propagateRiding=Whether to pass player riders to parent template in compound templates
entities.auspicioushelper/TemplateBlock.attributes.description.propagateShaking=Whether shake this block when the parent shakes when in compound template
entities.auspicioushelper/TemplateBlock.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Cassette Block
entities.auspicioushelper/TemplateCassetteBlock.placements.name.main=Template Cassette Block
entities.auspicioushelper/TemplateCassetteBlock.placements.description.main=A cassette block that can be made with a template
entities.auspicioushelper/TemplateCassetteBlock.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateCassetteBlock.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateCassetteBlock.attributes.description.freeze=Whether or not this template's entities should update when inactive
entities.auspicioushelper/TemplateCassetteBlock.attributes.description.do_boost= bounces the template up when activates (jank)
entities.auspicioushelper/TemplateCassetteBlock.attributes.description.channel= Will be present when channel is nonzero; also used for rendering.
entities.auspicioushelper/TemplateCassetteBlock.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Channelmover
entities.auspicioushelper/TemplateChannelmover.placements.name.main=Template Channelmover
entities.auspicioushelper/TemplateChannelmover.placements.description.main=A template that moves between two nodes based on a channel
entities.auspicioushelper/TemplateChannelmover.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateChannelmover.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateChannelmover.attributes.description.channel=The channel to listen to. When this channel is active/odd, this template moves to the end node
entities.auspicioushelper/TemplateChannelmover.attributes.description.move_time=How long in seconds it takes to move from one node to the other
entities.auspicioushelper/TemplateChannelmover.attributes.description.asymmetry=What to divide the return speed by (ex. move_time=2 and asymmetry=4, return move speed is 0.5sec)
entities.auspicioushelper/TemplateChannelmover.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Fake Wall
entities.auspicioushelper/TemplateFakewall.placements.name.main=Template Fake Wall
entities.auspicioushelper/TemplateFakewall.placements.description.main=A fake wall that can be made with a template
entities.auspicioushelper/TemplateFakewall.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateFakewall.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateFakewall.attributes.description.freeze=If this template's entities should update or not
entities.auspicioushelper/TemplateFakewall.attributes.name.dontOnTransitionInto=Don't Transition Into
entities.auspicioushelper/TemplateFakewall.attributes.description.dontOnTransitionInto=Whether this template should play the disappearing animation or not if the player transitions into this entity
entities.auspicioushelper/TemplateFakewall.attributes.description.disappear_depth=The depth of this template as it's disappearing
entities.auspicioushelper/TemplateFakewall.attributes.description.fade_speed=How fast this template disappears. (It takes 1/fadespeed seconds)
entities.auspicioushelper/TemplateFakewall.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Falling Block
entities.auspicioushelper/TemplateFallingblock.placements.name.main=Template Falling Block
entities.auspicioushelper/TemplateFallingblock.placements.description.main=A falling block that can be made with a template. All interior solids collide with world.
entities.auspicioushelper/TemplateFallingblock.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateFallingblock.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateFallingblock.attributes.description.direction=The direction to fall in
entities.auspicioushelper/TemplateFallingblock.attributes.description.reverseChannel=If this channel is NOT 0, fall in the reverse direction
entities.auspicioushelper/TemplateFallingblock.attributes.description.triggerChannel=If this channel is NOT 0, make the template fall automatically
entities.auspicioushelper/TemplateFallingblock.attributes.description.gravity=How fast this template should accelerate (vanilla is 500)
entities.auspicioushelper/TemplateFallingblock.attributes.description.max_speed=The maximum speed this template should fall (vanilla is 130)
entities.auspicioushelper/TemplateFallingblock.attributes.description.impact_sfx=The sound to play when this template hits the ground
entities.auspicioushelper/TemplateFallingblock.attributes.description.shake_sfx=The sound to play when this template gets triggered
entities.auspicioushelper/TemplateFallingblock.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Filler
entities.auspicioushelper/templateFiller.placements.name.main=Template Filler
entities.auspicioushelper/templateFiller.placements.description.main=Place this entity so that it's covering your desired group of objects, and then it can be used as a template (make sure the room name starts with "zztemplates-")
entities.auspicioushelper/templateFiller.attributes.description.template_name=The name of this template. When using this template, specify it like <roomname>/<templatename>, assuming this template is placed in a room named "zztemplates-<roomname>"

# Template Holdable
entities.auspicioushelper/templateholdable.placements.name.main=Template Holdable
entities.auspicioushelper/templateholdable.placements.description.main=A holdable that can be made with a template
entities.auspicioushelper/templateholdable.attributes.description.cannot_hold_timer=How long one must wait before being allowed to pick up this entity after dropping it
entities.auspicioushelper/templateholdable.attributes.description.Holdable_collider_expand=How much the holdable collider should extend from the base collider in every direction
entities.auspicioushelper/templateholdable.attributes.description.slowfall=like a jelly
entities.auspicioushelper/templateholdable.attributes.description.slowrun=Does the holdable encumber?
entities.auspicioushelper/templateholdable.attributes.description.always_collidable=Whether this should collide with other actors even when it is being held (will not collide with the holder)
entities.auspicioushelper/templateholdable.attributes.description.player_momentum_weight=When grabbed, how much the final player velocity should use the player's velocity
entities.auspicioushelper/templateholdable.attributes.description.holdable_momentum_weight=When grabbed, how much the final player velocity should use the holdable's velocity
entities.auspicioushelper/templateholdable.attributes.description.wallhitsound=sound to play when hitting walls or floor
entities.auspicioushelper/templateholdable.attributes.description.wallhit_speedretain=When hitting walls, how much speed to retain
entities.auspicioushelper/templateholdable.attributes.description.gravity=How quickly to approach terminal velocity
entities.auspicioushelper/templateholdable.attributes.description.terminal_velocity=Max falling speed
entities.auspicioushelper/templateholdable.attributes.description.friction=Air friction
entities.auspicioushelper/templateholdable.attributes.description.die_to_barrier=Die to seeker barriers
entities.auspicioushelper/templateholdable.attributes.description.respawning=
entities.auspicioushelper/templateholdable.attributes.description.respawnDelay=Time it takes to respawn
entities.auspicioushelper/templateholdable.attributes.description.dontFlingOff=When liftspeed stops or becomes pointed downwards, whether this holdable should be flung
entities.auspicioushelper/templateholdable.attributes.description.start_floating=Yea like if it starts floating
entities.auspicioushelper/templateholdable.attributes.description.dangerous=Whether to crush things like hearts
entities.auspicioushelper/templateholdable.attributes.description.voidDieOffset=How far below the screen the bottom of the collider must be for this to die
entities.auspicioushelper/templateholdable.attributes.description.tutorial=Show grabbing tutorial
entities.auspicioushelper/templateholdable.attributes.name._loenn_display_template=[LÖNN] Display Template
# hoo boy
# lmao ikr?

# Template Moon Block
entities.auspicioushelper/TemplateMoonblock.placements.name.main=Template Moon Block
entities.auspicioushelper/TemplateMoonblock.placements.description.main=A moon block that can be made with a template
entities.auspicioushelper/TemplateMoonblock.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateMoonblock.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateMoonblock.attributes.description.drift_frequency=How fast the template bobs up and down
entities.auspicioushelper/TemplateMoonblock.attributes.description.drift_amplitude=How much distance the template bobs up and down
entities.auspicioushelper/TemplateMoonblock.attributes.description.sink_amount=How much distance the template sinks
entities.auspicioushelper/TemplateMoonblock.attributes.description.sink_speed=How fast the template sinks when stood on or grabbed
entities.auspicioushelper/TemplateMoonblock.attributes.description.dash_influence=How far a dash will push this block
entities.auspicioushelper/TemplateMoonblock.attributes.description.startphase=The floating phase this template should start on, in radians
entities.auspicioushelper/TemplateMoonblock.attributes.description.useCustomStartphase=If this template should start its floating on some certain phase. Check this if "Start Phase" is specified
entities.auspicioushelper/TemplateMoonblock.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Move Block
entities.auspicioushelper/TemplateMoveblock.placements.name.main=Template Move Block
entities.auspicioushelper/TemplateMoveblock.placements.description.main=A move block that can be made with a template
entities.auspicioushelper/TemplateMoveblock.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateMoveblock.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateMoveblock.attributes.description.direction=The direction to move in
entities.auspicioushelper/TemplateMoveblock.attributes.description.uncollidable_blocks=Even uncollidable blocks in this template will stop the block's movement when hitting something
entities.auspicioushelper/TemplateMoveblock.attributes.description.speed=The speed this template will move at
entities.auspicioushelper/TemplateMoveblock.attributes.description.acceleration=How fast this template will accelerate to its top speed
entities.auspicioushelper/TemplateMoveblock.attributes.description.respawning=Whether or not this template will respawn
entities.auspicioushelper/TemplateMoveblock.attributes.description.respawn_timer=How long it takes this template to respawn
entities.auspicioushelper/TemplateMoveblock.attributes.description.Max_stuck=How long this template can be stuck before it breaks
entities.auspicioushelper/TemplateMoveblock.attributes.description.cansteer=If the player can steer this template
entities.auspicioushelper/TemplateMoveblock.attributes.description.movesfx=The sound to play while this template is moving
entities.auspicioushelper/TemplateMoveblock.attributes.description.max_leniency=The maximum amount of pixels this template can corner correct to avoid being stuck
entities.auspicioushelper/TemplateMoveblock.attributes.name._loenn_display_template=[LÖNN] Display Template

#i dunno
#it is wymiki's house
# Template Static Mover
entities.auspicioushelper/TemplateStaticmover.placements.name.main=Template Staticmover
entities.auspicioushelper/TemplateStaticmover.placements.description.main=Attach a template to an existing solid
entities.auspicioushelper/TemplateStaticmover.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateStaticmover.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateStaticmover.attributes.description.liftspeed_smear=How many past frames of movement to use to calculate liftspeed
entities.auspicioushelper/TemplateStaticmover.attributes.description.smear_average=Whether to smear by averaging past movement (default is take largest movement)
entities.auspicioushelper/TemplateStaticmover.attributes.description.ridingTrigger=Whether riding this template should trigger the parent (a-la spring on zipmover)
entities.auspicioushelper/TemplateStaticmover.attributes.description.EnableUnrooted=Whether this template can display without being attached to anything
entities.auspicioushelper/TemplateStaticmover.attributes.description.channel=The cassette material channel used for displaying this while inactive. If left blank, the template will be destroyed and remade every time the attached block enables/disables
entities.auspicioushelper/TemplateStaticmover.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Swap Block
entities.auspicioushelper/TemplateSwapblock.placements.name.main=Template Swap Block
entities.auspicioushelper/TemplateSwapblock.placements.description.main=A swap block that can be made with a template
entities.auspicioushelper/TemplateSwapblock.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateSwapblock.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateSwapblock.attributes.description.max_speed=The top speed of this template when it's swapping
entities.auspicioushelper/TemplateSwapblock.attributes.description.max_return_speed=The speed of this template when it's returning
entities.auspicioushelper/TemplateSwapblock.attributes.description.returning=If this template should act like a vanilla swap block or a toggle swap block
entities.auspicioushelper/TemplateSwapblock.attributes.name._loenn_display_template=[LÖNN] Display Template

# Template Zip Mover
entities.auspicioushelper/TemplateZipmover.placements.name.main=Template Zip Mover
entities.auspicioushelper/TemplateZipmover.placements.description.main=A zip mover that can be made with a template. Supports multiple nodes and multiple stops. To add a stop use two stacked nodes 
entities.auspicioushelper/TemplateZipmover.attributes.description.template=The name of the template to use. (<room>/<name>)
entities.auspicioushelper/TemplateZipmover.attributes.description.depthoffset=How much to offset the depth of contained entities
entities.auspicioushelper/TemplateZipmover.attributes.description.return_type=The behavior this template has when reaching the last node
entities.auspicioushelper/TemplateZipmover.attributes.description.activation_type=How this template is activated
entities.auspicioushelper/TemplateZipmover.attributes.description.channel=Channel to use for grouped template zipmover movement (all zipmovers on the same channel trigger eachother)
entities.auspicioushelper/TemplateZipmover.attributes.description.propegateRiding=Whether to tell parent templates if this has a rider
entities.auspicioushelper/TemplateZipmover.attributes.description.lastNodeIsKnot=Make the last node a stop even if it is not stacked. Can be disabled to allow for crooked paths on the last segment of a looping path.
entities.auspicioushelper/TemplateZipmover.attributes.name._loenn_display_template=[LÖNN] Display Template

### silly

ui.menubar.auspicioushelper_legacyicons=Use Legacy Template Icons [Auspicious Helper]